jenkins is a open source, plugin Library, Active community,
resource support.

Jenkins is an open source automation server that accelerate s/f development.
It orchestrate  the s/w delivery from building, testing, to deploymnet.

jobs:  are building blocks defining specific tasks such as compiling code, running, tests, or deploying

Build: Each execution of a job, with jenkins maintaining a history for troubleshooting

Freestyle Project: The default project type, offerinmg flexible job definitions
Pipeline: chain jobs together to automate tasks from development to deploymnet
stages: Group related jobs into phases like Build, test, deploly for clarity
Nodes: machines where jenkins executes jobs, with a single controller of multiple agents.
Plugins: Extend jenkins functionalities, integrating with various tools and technologies.

jenkins controller node/ master node coordinating the entire CI/CD process.
basic deployment[controller + worker node]
nodes are worker machines connected through SSH, JNLP, ...
Executers
Agents 

Jenkins installation:
 Jenkins_HOME : /var/lib/jenkins
 on ubuntu:
     java -version
     journalctl -u jenkins:  to check logs
     sudo apt install fontconfig openjdk-17-jre -y
     systemctl restart jenkins

Types:
Freestyle project
Pipeline Project
Multibranch Pipeline
Maven Project
Multiconfiguration project
Organization Folders
plugins are extensions 

check the logs: sudo journalctl -xeu jenkins.service
Jenkins cli 
Jenkins RestAPI




################################################################################################
# Jenkins uses Master/slave approach
#
# we can use two types of approaches:
#    1. Using EC2 instances/VM based approach: 
#       In this approach, jenkins will be on one ec2 instance as master then deploy the codes to slave instances.
#    2. Using Docker container based approach:
#        In this approach, jenkins uses docker daemon, and deploys the code to containers.
#
# Better approach is using docker:
#   you can scale containers to zero 
#   you can run multiple versions of your applicaion easily
#   it is light weight.
#   Less maintenance
#
#
#
##############################################################################################

For JDK & Jenkins installation in CentOS:
    sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
    sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
    sudo yum upgrade
    sudo yum install fontconfig java-17-openjdk
    sudo yum install jenkins
    sudo systemctl daemon-reload
    sudo systemctl enable jenkins
    sudo usermod -aG docker jenkins : adding jenkins user to docker group
    sudo gpasswd -d jenkins docker : remove jenkins user from docker group
    cat /etc/passwd | grep "jenkins" to check whether the user jenkins is available 
    cat /etc/groups | grep 'docker' : to check the users who belongs to docker group



#######################################################################################################################
#           
#      sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent : allowing port 8080 to connect from host machines
#      sudo firewall-cmd --reload : to reload the firewall
#      sudo firewall-cmd --list-all : to list the firewall
#      sudo firewall-cmd --zone=public --remove-port=8080/tcp --permanent : removing port 8080 
#
#       
#######################################################################################################################     




